// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MeetingsChart with defaults matches the snapshot 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "meetings-db",
    },
    "spec": Object {
      "externalIPs": Array [],
      "ports": Array [
        Object {
          "port": 5432,
        },
      ],
      "selector": Object {
        "cdk8s.statefulset": "construct-meetings.db.sts-c83f5e98",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": Object {
      "name": "meetings-db",
    },
    "spec": Object {
      "podManagementPolicy": "OrderedReady",
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.statefulset": "construct-meetings.db.sts-c83f5e98",
        },
      },
      "serviceName": "meetings-db",
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.statefulset": "construct-meetings.db.sts-c83f5e98",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "env": Array [
                Object {
                  "name": "POSTGRES_PASSWORD",
                  "value": "hunter2",
                },
              ],
              "image": "postgres",
              "imagePullPolicy": "IfNotPresent",
              "name": "postgres",
              "ports": Array [
                Object {
                  "containerPort": 5432,
                },
              ],
              "volumeMounts": Array [],
            },
          ],
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "meetings",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.deployment": "construct-meetings.deployment-c8bcd4fd",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "construct-meetings.deployment-c8bcd4fd",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "env": Array [
                Object {
                  "name": "DATABASE_URL",
                  "value": "postgres://postgres:hunter2@meetings-db:5432",
                },
              ],
              "image": "meetings",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/health",
                  "port": 3000,
                },
              },
              "name": "meetings",
              "ports": Array [],
              "volumeMounts": Array [],
            },
          ],
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "meetings",
    },
    "spec": Object {
      "externalIPs": Array [],
      "ports": Array [
        Object {
          "port": 80,
          "targetPort": 3000,
        },
      ],
      "selector": Object {
        "cdk8s.deployment": "construct-meetings.deployment-c8bcd4fd",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": Object {
      "name": "meetings.ingress.local",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "host": "meetings.localhost",
          "http": Object {
            "paths": Array [
              Object {
                "backend": Object {
                  "serviceName": "meetings",
                  "servicePort": 80,
                },
              },
            ],
          },
        },
      ],
    },
  },
  Object {
    "apiVersion": "batch/v1beta1",
    "kind": "CronJob",
    "metadata": Object {
      "name": "meetings-daily-reminder",
    },
    "spec": Object {
      "jobTemplate": Object {
        "spec": Object {
          "template": Object {
            "spec": Object {
              "containers": Array [
                Object {
                  "command": Array [
                    "curl",
                    "-XPOST",
                    "meetings/sendDailyReminders",
                  ],
                  "image": "curlimages/curl",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "daily-reminder",
                },
              ],
              "restartPolicy": "Never",
            },
          },
          "ttlSecondsAfterFinished": 60,
        },
      },
      "schedule": "0 9 * * *",
    },
  },
]
`;
